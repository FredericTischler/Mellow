-- CREATE TABLE IF NOT EXISTS "users" (
-- 	"user_id" VARCHAR NOT NULL,
-- 	"session_id" VARCHAR NOT NULL,
-- 	"email" VARCHAR NOT NULL UNIQUE,
-- 	"password" VARCHAR NOT NULL,
-- 	"username" VARCHAR NOT NULL UNIQUE,
-- 	"firstname" VARCHAR NOT NULL,
-- 	"lastname" VARCHAR NOT NULL,
-- 	"birthdate" DATETIME NOT NULL,
-- 	"role" VARCHAR NOT NULL,
-- 	-- optionnelle
-- 	"avatar" BLOB,
-- 	"creation_date" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
-- 	-- optionnelle
-- 	"description" VARCHAR,
-- 	PRIMARY KEY("user_id"),
-- 	FOREIGN KEY ("user_id") REFERENCES "sessions"("user_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION,
-- 	FOREIGN KEY ("user_id") REFERENCES "notifications"("user_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION
-- );
-- CREATE INDEX IF NOT EXISTS "users_index_0"
-- ON "users" ("email", "username");
-- CREATE TABLE IF NOT EXISTS "sessions" (
-- 	"session_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"user_id" VARCHAR NOT NULL,
-- 	"creation_date" DATETIME NOT NULL,
-- 	"last_activity" DATETIME NOT NULL,
-- 	PRIMARY KEY("session_id")
-- );
-- CREATE INDEX IF NOT EXISTS "sessions_index_0"
-- ON "sessions" ("user_id");
-- CREATE TABLE IF NOT EXISTS "groups" (
-- 	"group_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"user_id" VARCHAR NOT NULL,
-- 	"title" VARCHAR NOT NULL,
-- 	"description" TEXT,
-- 	"creation_date" DATETIME NOT NULL,
-- 	"visibility" TEXT NOT NULL CHECK("visibility" IN public AND private),
-- 	PRIMARY KEY("group_id")
-- );
-- CREATE INDEX IF NOT EXISTS "groups_index_0"
-- ON "groups" ("user_id");
-- CREATE TABLE IF NOT EXISTS "groups_member" (
-- 	-- Foreign Key
-- 	"group_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"user_id" VARCHAR NOT NULL,
-- 	"role" VARCHAR,
-- 	"join_date" DATETIME NOT NULL	FOREIGN KEY ("group_id") REFERENCES "groups"("group_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION,
-- 	FOREIGN KEY ("user_id") REFERENCES "users"("user_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION
-- );
-- CREATE INDEX IF NOT EXISTS "groups_member_index_0"
-- ON "groups_member" ("group_id", "user_id");
-- CREATE TABLE IF NOT EXISTS "notifications" (
-- 	"notification_id" VARCHAR,
-- 	-- Foreign Key
-- 	"user_id" VARCHAR NOT NULL,
-- 	"type" TEXT NOT NULL CHECK("type" IN follow AND group_invite AND event_created),
-- 	"seen" BOOLEAN NOT NULL DEFAULT false,
-- 	"creation_date" DATETIME NOT NULL,
-- 	PRIMARY KEY("notification_id")
-- );
-- CREATE INDEX IF NOT EXISTS "notifications_index_0"
-- ON "notifications" ("type", "user_id");
-- CREATE TABLE IF NOT EXISTS "posts" (
-- 	"post_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"group_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"user_id" VARCHAR NOT NULL,
-- 	"title" VARCHAR NOT NULL,
-- 	"content" TEXT NOT NULL,
-- 	"creation_date" DATETIME NOT NULL,
-- 	"visibility" TEXT NOT NULL CHECK("visibility" IN public AND followers AND private),
-- 	PRIMARY KEY("post_id"),
-- 	FOREIGN KEY ("post_id") REFERENCES "comments"("post_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION
-- );
-- CREATE INDEX IF NOT EXISTS "posts_index_0"
-- ON "posts" ("visibility", "group_id", "user_id");
-- CREATE TABLE IF NOT EXISTS "posts_viewer" (
-- 	-- Foreign Key
-- 	"post_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"user_id" VARCHAR NOT NULL	FOREIGN KEY ("post_id") REFERENCES "posts"("post_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION,
-- 	FOREIGN KEY ("user_id") REFERENCES "users"("user_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION
-- );
-- CREATE INDEX IF NOT EXISTS "posts_viewer_index_0"
-- ON "posts_viewer" ("post_id", "user_id");
-- CREATE TABLE IF NOT EXISTS "comments" (
-- 	"comment_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"user_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"post_id" VARCHAR NOT NULL,
-- 	"content" TEXT NOT NULL,
-- 	"creation_date" DATETIME NOT NULL,
-- 	PRIMARY KEY("comment_id")
-- );
-- CREATE INDEX IF NOT EXISTS "comments_index_0"
-- ON "comments" ("user_id", "post_id");
-- CREATE TABLE IF NOT EXISTS "reports" (
-- 	-- Foreign Key
-- 	"post_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"user_id" VARCHAR NOT NULL,
-- 	"group_id" VARCHAR NOT NULL,
-- 	"content" VARCHAR NOT NULL,
-- 	-- check((post_id null && uder_id  not null)
-- 	-- ||
-- 	-- (post_id not null && uder_id  null)
-- 	"type" TEXT NOT NULL CHECK("type" IN spam AND abuse AND other)	FOREIGN KEY ("group_id") REFERENCES "groups"("group_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION,
-- 	FOREIGN KEY ("post_id") REFERENCES "posts"("post_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION,
-- 	FOREIGN KEY ("user_id") REFERENCES "users"("user_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION
-- );
-- CREATE INDEX IF NOT EXISTS "reports_index_0"
-- ON "reports" ("post_id", "user_id");
-- CREATE TABLE IF NOT EXISTS "follow_requests" (
-- 	"sender_id" VARCHAR NOT NULL,
-- 	"receiver_id" VARCHAR,
-- 	"group_id" VARCHAR,
-- 	"status" BOOLEAN NOT NULL,
-- 	"creation_date" DATETIME NOT NULL,
-- 	-- check((post_id null && uder_id  not null)
-- 	-- ||
-- 	-- (post_id not null && uder_id  null))
-- 	"type" TEXT NOT NULL CHECK("type" IN user AND group),
-- 	PRIMARY KEY("sender_id", "receiver_id", "group_id"),
-- 	FOREIGN KEY ("group_id") REFERENCES "groups"("group_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION,
-- 	FOREIGN KEY ("sender_id") REFERENCES "users"("user_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION
-- );
-- CREATE INDEX IF NOT EXISTS "follow_requests_index_0"
-- ON "follow_requests" ("type");
-- CREATE TABLE IF NOT EXISTS "messages" (
-- 	"message_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"sender_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"receiver_id" VARCHAR NOT NULL,
-- 	"content" TEXT NOT NULL,
-- 	"creation_date" DATETIME NOT NULL,
-- 	PRIMARY KEY("message_id"),
-- 	FOREIGN KEY ("sender_id") REFERENCES "users"("user_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION,
-- 	FOREIGN KEY ("sender_id") REFERENCES "groups"("group_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION
-- );
-- CREATE INDEX IF NOT EXISTS "messages_index_0"
-- ON "messages" ("receiver_id", "sender_id");
-- CREATE TABLE IF NOT EXISTS "events" (
-- 	"event_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"user_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"group_id" VARCHAR NOT NULL,
-- 	"creation_date" DATETIME NOT NULL,
-- 	"event_date" DATETIME NOT NULL,
-- 	PRIMARY KEY("event_id"),
-- 	FOREIGN KEY ("event_id") REFERENCES "events_response"("event_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION,
-- 	FOREIGN KEY ("group_id") REFERENCES "groups"("group_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION
-- );
-- CREATE INDEX IF NOT EXISTS "events_index_0"
-- ON "events" ("group_id", "user_id");
-- CREATE TABLE IF NOT EXISTS "events_response" (
-- 	-- Foreign Key
-- 	"event_id" VARCHAR NOT NULL,
-- 	-- Foreign Key
-- 	"user_id" VARCHAR NOT NULL,
-- 	"group_id" VARCHAR NOT NULL,
-- 	"status" TEXT NOT NULL CHECK("status" IN going AND not_going),
-- 	"vote" TEXT	FOREIGN KEY ("user_id") REFERENCES "groups_member"("user_id")
-- 	ON UPDATE NO ACTION ON DELETE NO ACTION
-- );
-- CREATE INDEX IF NOT EXISTS "events_response_index_0"
-- ON "events_response" ("event_id", "user_id");